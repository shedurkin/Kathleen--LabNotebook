<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Kathleen&#39;s Lab Notebook</title>
<link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral.html</link>
<atom:link href="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Fri, 07 Feb 2025 08:00:00 GMT</lastBuildDate>
<item>
  <title>Deep-dive expression: Gene expression summary (for Hisat gene counts)</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_07_deepdive_Apul_Hisat_RNAsummary.html</link>
  <description><![CDATA[ 




<p>Generating update summary of Apul gene expression using counts generated through Hisat with the <em>A.pulchra</em> genome. (Existing summary used counts summarized using kallisto and the <em>A.millipora</em> transcriptome)</p>
<p>Code recorded below in case github links change.</p>
<p><strong>Total gene counts (normalized):</strong></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat_files/figure-gfm/norm-transcript-counts-plot-1.png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat_files/figure-gfm/norm-expression-level-histograms-1.png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat_files/figure-gfm/PCA-1.png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat_files/figure-gfm/sample-clustering-1.png" class="img-fluid"></p>
<section id="apul-rna-summary-hisat" class="level1">
<h1><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/03.01-Apul-RNA-summary-Hisat.md#15-most-common-biological-processes">03.01-Apul-RNA-summary-Hisat</a></h1>
<p>Gene expression summary for <em>Acropora pulchra</em> RNA-seq data.</p>
<ul>
<li><p>trimmed reads generated in <code>deep-dive</code> project, trimming and QC details in <code>01-Apul-RNA-trimming-FastQC</code></p></li>
<li><p>Reads aligned to <em>Acropora pulchra</em> genome (unpub)</p></li>
<li><p>Count matrix generated in <code>07-Apul-Hisat</code></p></li>
</ul>
<section id="install-and-load-packages" class="level3">
<h3 class="anchored" data-anchor-id="install-and-load-packages">0.0.1 Install and load packages</h3>
<pre><code>library(tidyverse) library(ggplot2) library(reshape2) library(magrittr) library(DESeq2) library(RColorBrewer) library(pheatmap)</code></pre>
</section>
</section>
<section id="unnormalized-data" class="level1">
<h1>1 Unnormalized data</h1>
<section id="load-count-data" class="level2">
<h2 class="anchored" data-anchor-id="load-count-data">1.1 Load count data</h2>
<p>Load in and format the count matrix.</p>
<pre><code># Read in counts data. This is a gene-level counts matrix generated from kallisto transcript abundances using Trinity Apul_counts_RNA_OG &lt;- read_delim("../output/07-Apul-Hisat/Apul-gene_count_matrix.csv")  head(Apul_counts_RNA_OG)</code></pre>
<pre><code># A tibble: 6 × 6   gene_id  `RNA-ACR-140` `RNA-ACR-145` `RNA-ACR-150` `RNA-ACR-173` `RNA-ACR-178`   &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt; 1 FUN_035…           553           340           256           485           510 2 FUN_035…          2486           775           743          1250          1092 3 FUN_035…            46             6            25            41            29 4 FUN_035…           183           252            48            78            73 5 FUN_035…          1519           311           555           990           370 6 FUN_035…          1764          1297          1035          1763          1360 </code></pre>
<pre><code># Read in ID mapping of A.pulchra mRNA and associated functional annotations Apul_IDmapping &lt;- read_delim("../output/02-Apul-reference-annotation/Apulcra-genome-mRNA-IDmapping-2024_12_12.tab") %&gt;%   select(-...1) head(Apul_IDmapping)</code></pre>
<pre><code># A tibble: 6 × 7   V1                V3         V13 Protein.names Organism Gene.Ontology..biolo…¹   &lt;chr&gt;             &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt;                  1 ntLink_4:1155-15… P350… 4.96e-86 Histone H2A   Acropor… &lt;NA&gt;                   2 ntLink_4:2660-34… P842… 5.03e-93 Histone H3    Urechis… &lt;NA&gt;                   3 ntLink_4:4515-68… P350… 6.65e-78 Histone H2A   Acropor… &lt;NA&gt;                   4 ntLink_4:7096-78… P842… 4.03e-93 Histone H3    Urechis… &lt;NA&gt;                   5 ntLink_4:8474-96… P350… 7.49e-82 Histone H2A   Acropor… &lt;NA&gt;                   6 ntLink_4:11162-1… P842… 4.03e-93 Histone H3    Urechis… &lt;NA&gt;                   # ℹ abbreviated name: ¹​Gene.Ontology..biological.process. # ℹ 1 more variable: Gene.Ontology.IDs &lt;chr&gt; </code></pre>
<pre><code># Read in table that associates each mRNA genomic location with it's gene ID Apul_geneIDs &lt;- read_delim("../output/15-Apul-annotate-UTRs/Apul-mRNA-FUNids.txt", col_names = FALSE) %&gt;%   select(X1,X4) Apul_geneIDs$X4 &lt;- gsub("Parent=","",Apul_geneIDs$X4) head(Apul_geneIDs)</code></pre>
<pre><code># A tibble: 6 × 2   X1                   X4           &lt;chr&gt;                &lt;chr&gt;      1 ntLink_0:1104-7056   FUN_000001 2 ntLink_0:10214-15286 FUN_000002 3 ntLink_0:32056-33275 FUN_000003 4 ntLink_0:34823-42794 FUN_000004 5 ntLink_0:45952-51024 FUN_000005 6 ntLink_0:61628-78213 FUN_000006 </code></pre>
</section>
<section id="count-data-munging" class="level2">
<h2 class="anchored" data-anchor-id="count-data-munging">1.2 Count data munging</h2>
<pre><code># We need to modify this data frame so that the row names are actually row names, instead of comprising the first column Apul_counts_RNA &lt;- Apul_counts_RNA_OG %&gt;%   column_to_rownames(var = "gene_id")  # Additional formatting # Round all estimated counts to integers Apul_counts_RNA &lt;- round(Apul_counts_RNA, digits = 0)  # Remove all transcripts with 5 or fewer counts in all samples Apul_counts_RNA &lt;- Apul_counts_RNA[!apply(Apul_counts_RNA, 1, function(row) all(row &lt; 6)), ]  # Remove the "RNA-" portion of the column names, to leave just the sample names colnames(Apul_counts_RNA) &lt;- sub("RNA-", "", colnames(Apul_counts_RNA))  # Reorder the columns into alphabetical order (to make it easier to create an associated metadata spreadsheet) Apul_counts_RNA &lt;- Apul_counts_RNA[, order(colnames(Apul_counts_RNA))]  write.table(Apul_counts_RNA, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_RNA_Hisat_counts_formatted.txt", row.names = TRUE, col.names = TRUE)  Apul_sample_names &lt;- names(Apul_counts_RNA)  head(Apul_counts_RNA)</code></pre>
<pre><code>           ACR-140 ACR-145 ACR-150 ACR-173 ACR-178 FUN_035039     553     340     256     485     510 FUN_035038    2486     775     743    1250    1092 FUN_035031      46       6      25      41      29 FUN_035030     183     252      48      78      73 FUN_035033    1519     311     555     990     370 FUN_035032    1764    1297    1035    1763    1360 </code></pre>
<pre><code>Apul_sample_names</code></pre>
<pre><code>[1] "ACR-140" "ACR-145" "ACR-150" "ACR-173" "ACR-178" </code></pre>
<pre><code># Add gene IDs to the IDmapping Apul_IDmapping &lt;- left_join(Apul_IDmapping, Apul_geneIDs, by = c("V1" = "X1"))  Apul_counts_GO &lt;- Apul_counts_RNA %&gt;%   rownames_to_column(var = "geneID") %&gt;%   left_join(Apul_IDmapping, by = c("geneID" = "X4"))  write.table(Apul_counts_GO, "../output/03.01-Apul-RNA-summary-Hisat/Apul_RNA_Hisat_counts_formatted.txt", sep = '\t', row.names = TRUE, col.names = TRUE, quote = FALSE)  head(Apul_counts_GO)</code></pre>
<pre><code>      geneID ACR-140 ACR-145 ACR-150 ACR-173 ACR-178                         V1 1 FUN_035039     553     340     256     485     510                       &lt;NA&gt; 2 FUN_035038    2486     775     743    1250    1092                       &lt;NA&gt; 3 FUN_035031      46       6      25      41      29                       &lt;NA&gt; 4 FUN_035030     183     252      48      78      73 ptg000025l:3084856-3086902 5 FUN_035033    1519     311     555     990     370                       &lt;NA&gt; 6 FUN_035032    1764    1297    1035    1763    1360                       &lt;NA&gt;           V3      V13 Protein.names Organism Gene.Ontology..biological.process. 1       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 2       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 3       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 4 A0A2B4RNI3 2.04e-25          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 5       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt; 6       &lt;NA&gt;       NA          &lt;NA&gt;     &lt;NA&gt;                               &lt;NA&gt;   Gene.Ontology.IDs 1              &lt;NA&gt; 2              &lt;NA&gt; 3              &lt;NA&gt; 4              &lt;NA&gt; 5              &lt;NA&gt; 6              &lt;NA&gt; </code></pre>
</section>
<section id="expression-levels" class="level2">
<h2 class="anchored" data-anchor-id="expression-levels">1.3 Expression levels</h2>
<p>Plot histograms of the expression levels in each sample</p>
<pre><code># Melt the count matrix into long format Apul_counts_melted &lt;- melt(Apul_counts_RNA, variable.name = "sample", value.name = "counts")  # Plot the expression level histograms for each sample ggplot(Apul_counts_melted, aes(x = counts)) +   geom_histogram(binwidth = 1, fill = "#408EC6", color = "black") +   scale_x_log10() +  # Optional: Log-transform the x-axis for better visualization   facet_wrap(~sample, scales = "free_y") +   labs(title = "Gene Expression Level Histogram for Each Sample",        x = "Expression Level (Counts)",        y = "Frequency") +   theme_minimal()</code></pre>
</section>
<section id="transcript-counts" class="level2">
<h2 class="anchored" data-anchor-id="transcript-counts">1.4 Transcript counts</h2>
<p>First let's check the total number of transcripts in each sample – keep in mind this expression data has <em>not</em> been normalized yet, so there may be different totals for each sample</p>
<pre><code># Calculate the total number of transcripts for each sample total_transcripts &lt;- colSums(Apul_counts_RNA)  # Create a data frame for plotting total_transcripts_df &lt;- data.frame(sample = names(total_transcripts),                                    totals = total_transcripts)  # Plot the total number of transcripts for each sample ggplot(total_transcripts_df, aes(x = sample, y = totals)) +   geom_bar(stat = "identity", fill = "#408EC6", color = "black") +   labs(title = "Total Number of Transcripts per Sample",        x = "Sample",        y = "Total Transcripts") +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability</code></pre>
<p>Now let's check the number of unique transcripts in each sample – that is, how many genes are expressed in each sample? This should be pretty much the same across samples, even without normalization.</p>
<pre><code># Calculate the number of unique transcripts (non-zero counts) for each sample unique_transcripts &lt;- colSums(Apul_counts_RNA &gt; 0)  # Create a data frame for plotting unique_transcripts_df &lt;- data.frame(sample = names(unique_transcripts),                                     uniques = unique_transcripts)  # Plot the total number of unique transcripts for each sample ggplot(unique_transcripts_df, aes(x = sample, y = uniques)) +   geom_bar(stat = "identity", fill = "#408EC6", color = "black") +   labs(title = "Total Number of Unique Expressed Transcripts per Sample",        x = "Sample",        y = "Unique Transcripts") +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability</code></pre>
</section>
<section id="most-common-biological-processes" class="level2">
<h2 class="anchored" data-anchor-id="most-common-biological-processes">1.5 Most common biological processes</h2>
<p>Similar to the plot generated in <code>02-Apul-reference-annotation</code>, let's plot the biological processes most represented in these samples' expression</p>
<pre><code># Rename the `Gene.Ontology..biological.process.` column to `Biological_Process` colnames(Apul_counts_GO)[colnames(Apul_counts_GO) == "Gene.Ontology..biological.process."] &lt;- "Biological_Process"  # Separate the `Biological_Process` column into individual biological processes data_separated &lt;- unlist(strsplit(Apul_counts_GO$Biological_Process, split = ";"))  # Trim whitespace from the biological processes data_separated &lt;- gsub("^\\s+|\\s+$", "", data_separated)  # Count the occurrences of each biological process process_counts &lt;- table(data_separated) process_counts &lt;- data.frame(Biological_Process = names(process_counts), Count = as.integer(process_counts)) process_counts &lt;- process_counts[order(-process_counts$Count), ]  # Select the 20 most predominant biological processes top_20_processes &lt;- process_counts[1:20, ]  # Create a color palette for the bars bar_colors &lt;- rainbow(nrow(top_20_processes))  # Create a staggered vertical bar plot with different colors for each bar barplot(top_20_processes$Count, names.arg = rep("", nrow(top_20_processes)), col = bar_colors,         ylim = c(0, max(top_20_processes$Count) * 1.25),         main = "Occurrences of the 20 Most Predominant Biological Processes", xlab = "Biological Process", ylab = "Count")</code></pre>
<pre><code># Create a separate plot for the legend png("../output/03.01-Apul-RNA-summary-Hisat/GOlegend.png", width = 800, height = 600) par(mar = c(0, 0, 0, 0)) plot.new() legend("center", legend = top_20_processes$Biological_Process, fill = bar_colors, cex = 1, title = "Biological Processes") dev.off()</code></pre>
<pre><code>png    2  </code></pre>
<pre><code>knitr::include_graphics("../output/03.01-Apul-RNA-summary-Hisat/GOlegend.png")</code></pre>
<pre><code>rm ../output/03.01-Apul-RNA-summary-Hisat/GOlegend.png</code></pre>
</section>
</section>
<section id="normalized-counts" class="level1">
<h1>2 Normalized counts</h1>
<section id="normalize-counts-with-deseq2" class="level2">
<h2 class="anchored" data-anchor-id="normalize-counts-with-deseq2">2.1 Normalize counts with DESeq2</h2>
<section id="plot-unnormalized-data" class="level3">
<h3 class="anchored" data-anchor-id="plot-unnormalized-data">2.1.1 Plot unnormalized data</h3>
<pre><code>Apul_counts_RNA %&gt;%   pivot_longer( cols = everything(), names_to = "sample", values_to = "count") %&gt;%   ggplot(., aes(x = sample, y = count)) +   geom_violin() +    geom_point(alpha = 0.2) +   theme_minimal() +   labs(title = "Unnormalized transcript counts",        x = "Sample",        y = "count")</code></pre>
<p>We definitely need to normalize this data!</p>
</section>
<section id="metadata" class="level3">
<h3 class="anchored" data-anchor-id="metadata">2.1.2 Metadata</h3>
<p>DESeq2 requires a metadata data frame as input. I don't have sample metadata though so, since we're just doing DESeq2 for normalization purposes (not analysis purposes), I'm just going to create a dummy sheet</p>
<pre><code>Apul_sample_names &lt;- colnames(Apul_counts_RNA)  Apul_metadata_RNA &lt;- data.frame(Sample = Apul_sample_names,                             Species = rep("A.pulchra", 5)) rownames(Apul_metadata_RNA) &lt;- Apul_sample_names  head(Apul_metadata_RNA)</code></pre>
<pre><code>         Sample   Species ACR-140 ACR-140 A.pulchra ACR-145 ACR-145 A.pulchra ACR-150 ACR-150 A.pulchra ACR-173 ACR-173 A.pulchra ACR-178 ACR-178 A.pulchra </code></pre>
</section>
<section id="deseq-object" class="level3">
<h3 class="anchored" data-anchor-id="deseq-object">2.1.3 DESeq object</h3>
<pre><code># Calculate DESeq object dds_Apul_RNA &lt;- DESeqDataSetFromMatrix(countData = Apul_counts_RNA,                               colData = Apul_metadata_RNA,                               design = ~ 1)   # Run differential expression analysis  # (Note that this DESeq() function runs all necessary steps, including data normalization,  # estimating size factors, estimating dispersions, gene-wise dispersion estimates, mean-dispersion  # relationship, final dispersion estimates, fitting model, and testing) # Using design = ~1 because we don't have treatment groups  dds_Apul_RNA &lt;- DESeq(dds_Apul_RNA)</code></pre>
<p>It's worth noting here that I'm actually going to be doing two different types of transformation on the counts data, which serve different purposes.</p>
<ul>
<li><p>First is <strong>normalizing</strong> the transcript counts, which adjusts for differences in library size or sequencing depth, but retains count-like properties. Normalized counts are most useful for things like visualizing expression levels and differential expression analysis.</p></li>
<li><p>Second is <strong>variance stabilizing</strong> the counts data, which aims to make the variance of the transformed data approximately independent of the mean, reducing heteroscedasticity (the relationship between variance and mean) and "smoothing" out the variance at low counts. Notably, the transformed data is <em>no longer on the original count scale</em>. The transformation makes the variance roughly constant across the range of counts, which makes it easier to interpret patterns in the data visually. Variance stabilized data is most useful for exploratory data analysis, like PCA, clustering, and heatmaps, and is also the transformation we'll want to use before WGCNA.</p></li>
</ul>
<pre><code># extract normalized counts # (normalization is automatically performed by deseq2) Apul_counts_RNA_norm &lt;- counts(dds_Apul_RNA, normalized=TRUE) %&gt;% data.frame()  write.table(Apul_counts_RNA_norm, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_counts_RNA_normalized.txt", sep = "\t", row.names = TRUE, col.names = TRUE, quote = FALSE)   # variance stabilized data vsd_Apul_RNA &lt;- varianceStabilizingTransformation(dds_Apul_RNA, blind=TRUE) wpn_vsd_Apul_RNA &lt;- getVarianceStabilizedData(dds_Apul_RNA) rv_wpn_Apul_RNA &lt;- rowVars(wpn_vsd_Apul_RNA, useNames=TRUE)  Apul_counts_RNA_vsd &lt;- data.frame(wpn_vsd_Apul_RNA) write.table(Apul_counts_RNA_vsd, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_counts_RNA_variancestabilized.txt", sep = "\t", row.names = TRUE, col.names = TRUE,quote = FALSE)  q75_wpn_Apul_RNA &lt;- quantile(rowVars(wpn_vsd_Apul_RNA, useNames=TRUE), .75)  # 75th quantile variability Apul_counts_RNA_vsd_q75 &lt;- wpn_vsd_Apul_RNA[ rv_wpn_Apul_RNA &gt; q75_wpn_Apul_RNA, ] %&gt;% data.frame # filter to retain only the most variable genes write.table(Apul_counts_RNA_vsd_q75, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_counts_RNA_variancestabilized_q75.txt", sep = "\t", row.names = TRUE, col.names = TRUE,quote = FALSE)  q95_wpn_Apul_RNA &lt;- quantile(rowVars(wpn_vsd_Apul_RNA, useNames=TRUE), .95)  # 95th quantile variability Apul_counts_RNA_vsd_q95 &lt;- wpn_vsd_Apul_RNA[ rv_wpn_Apul_RNA &gt; q95_wpn_Apul_RNA, ] %&gt;% data.frame # filter to retain only the most variable genes write.table(Apul_counts_RNA_vsd_q95, file = "../output/03.01-Apul-RNA-summary-Hisat/Apul_counts_RNA_variancestabilized_q95.txt", sep = "\t", row.names = TRUE, col.names = TRUE,quote = FALSE)</code></pre>
</section>
</section>
<section id="plot-normalized-data" class="level2">
<h2 class="anchored" data-anchor-id="plot-normalized-data">2.2 Plot normalized data</h2>
<pre><code>Apul_counts_RNA_norm_long &lt;- Apul_counts_RNA_norm %&gt;%   mutate(     Gene_id = row.names(Apul_counts_RNA_norm)   ) %&gt;%   pivot_longer(-Gene_id)  Apul_counts_RNA_norm_long %&gt;%   ggplot(., aes(x = name, y = value)) +   geom_violin() +   geom_point() +   theme_bw() +   theme(     axis.text.x = element_text( angle = 90)   ) +   ylim(0, NA) +   labs(     title = "Normalized Expression",     x = "Sample",     y = "Normalized counts"   )</code></pre>
</section>
<section id="plot-variance-stabilized-data" class="level2">
<h2 class="anchored" data-anchor-id="plot-variance-stabilized-data">2.3 Plot variance stabilized data</h2>
<pre><code>Apul_counts_RNA_vsd_long &lt;- Apul_counts_RNA_vsd %&gt;%   mutate(     Gene_id = row.names(Apul_counts_RNA_vsd)   ) %&gt;%   pivot_longer(-Gene_id)  Apul_counts_RNA_vsd_long %&gt;%   ggplot(., aes(x = name, y = value)) +   geom_violin() +   geom_point() +   theme_bw() +   theme(     axis.text.x = element_text( angle = 90)   ) +   ylim(0, NA) +   labs(     title = "Variance Stabilized Expression",     x = "Sample",     y = "Variance stabilized data"   )</code></pre>
</section>
<section id="normalized-expression-levels" class="level2">
<h2 class="anchored" data-anchor-id="normalized-expression-levels">2.4 Normalized expression levels</h2>
<p>Plot histograms of the normalized expression levels in each sample</p>
<pre><code># Melt the count matrix into long format Apul_counts_norm_melted &lt;- melt(Apul_counts_RNA_norm, variable.name = "sample", value.name = "counts")  # Plot the expression level histograms for each sample ggplot(Apul_counts_norm_melted, aes(x = counts)) +   geom_histogram(binwidth = 1, fill = "#408EC6", color = "black") +   scale_x_log10() +  # Optional: Log-transform the x-axis for better visualization   facet_wrap(~sample, scales = "free_y") +   labs(title = "Gene Expression Level Histogram for Each Sample",        x = "Expression Level (Counts)",        y = "Frequency") +   theme_minimal()</code></pre>
</section>
<section id="normalized-transcript-counts" class="level2">
<h2 class="anchored" data-anchor-id="normalized-transcript-counts">2.5 Normalized transcript counts</h2>
<p>Check the total number of transcripts in each sample – now that we've normalized the data these totals should be similar</p>
<pre><code># Calculate the total number of transcripts for each sample total_transcripts_norm &lt;- colSums(Apul_counts_RNA_norm)  # Create a data frame for plotting total_transcripts_norm_df &lt;- data.frame(sample = names(total_transcripts_norm),                                    totals = total_transcripts_norm)  # Plot the total number of transcripts for each sample ggplot(total_transcripts_norm_df, aes(x = sample, y = totals)) +   geom_bar(stat = "identity", fill = "#408EC6", color = "black") +   labs(title = "Total Number of Transcripts per Sample",        x = "Sample",        y = "Total Transcripts") +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability</code></pre>
</section>
<section id="pca-of-variance-stabilized-data" class="level2">
<h2 class="anchored" data-anchor-id="pca-of-variance-stabilized-data">2.6 PCA of variance stabilized data</h2>
<pre><code>plotPCA(vsd_Apul_RNA, intgroup="Sample")</code></pre>
</section>
<section id="sample-clustering" class="level2">
<h2 class="anchored" data-anchor-id="sample-clustering">2.7 Sample clustering</h2>
<pre><code>sample_dists &lt;- dist(t(assay(vsd_Apul_RNA))) pheatmap(as.matrix(sample_dists), clustering_distance_rows = "euclidean",           clustering_distance_cols = "euclidean", main="Sample Clustering")</code></pre>
</section>
<section id="heatmaps" class="level2">
<h2 class="anchored" data-anchor-id="heatmaps">2.8 Heatmaps</h2>
<p>Of most variable variance stabilized genes</p>
<pre><code># 75th quantile heat_colors &lt;- rev(brewer.pal(12, "RdYlBu")) pheatmap(Apul_counts_RNA_vsd_q75,           cluster_rows = TRUE,          cluster_cols = TRUE,          show_rownames = TRUE,          show_colnames = TRUE,          color = heat_colors,          scale="row")</code></pre>
<pre><code># 95th quantile pheatmap(Apul_counts_RNA_vsd_q95,           cluster_rows = TRUE,          cluster_cols = TRUE,          show_rownames = TRUE,          show_colnames = TRUE,          color = heat_colors,          scale="row")</code></pre>


</section>
</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_07_deepdive_Apul_Hisat_RNAsummary.html</guid>
  <pubDate>Fri, 07 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Deep-dive expression: A.pul miRNA methylation machinery</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_07_deepdive_methyl_machinery.html</link>
  <description><![CDATA[ 




<section id="apul-mirna-methylation-machinery" class="level1">
<h1><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/23-Apul-miRNA-methylation-machinery.md"><strong>23-Apul-miRNA-methylation-machinery</strong></a></h1>
<p>One way miRNAs and DNA methylation can interact to influence expression is through miRNAs influencing the transcription/translation of protein machinery involved in DNA methylation. In humans, this has been identified as a potential mechanism of carcinogenisis! (Reviewed in Karimzadeh et al.&nbsp;(2021))</p>
<section id="which-genes-are-involved-in-dna-methylation" class="level2">
<h2 class="anchored" data-anchor-id="which-genes-are-involved-in-dna-methylation"><strong>Which genes are involved in DNA methylation?</strong></h2>
<p>“DNA methylation machinery is composed of several enzymes to accurately regulate the gene expression together. The main enzyme-encoding genes comprise a small family of DNA cytosine-5 methyltransferase, which are involved in established (DNA methyltransferase 3 alpha (DNMT3A) and DNA methyltransferase 3 beta (DNMT3B)) and maintenance (DNMT1) of methylation patterns. The other genes are methyl-CpG-binding proteins (MBPs; methyl-CpG-binding domain (MBD)1–4, methyl-CpG-binding protein 2 (MECP2), UHRF1/2, ZBTB33, ZBTB4, and ZBTB38) that assist in expression repression and 10–11 translocation (TET) enzymes (TET1, TET2, and TET3); seemingly, are implicated in DNA demethylation10,11. Some experiments demonstrated that, based on the importance of oncogenes and/or tumor suppressor genes alterations in the development of each type of cancer, DNA methylation regulator genes may enhance or suppress cancer development in each specific type of cancer12,13,14,15,16.” Karimzadeh et al.&nbsp;(2021)</p>
<p>So we’re looking for miRNAs that target genes encoding: - DNA methyltransferases (DNMTs) - methyl-CpG-binding proteins - 10–11 translocation (TET) enzymes</p>
<p>First let’s see what a quick search of our annotated A.pulchra genome turns up. I want to find any annotations related to DNA methyltransferase</p>
<pre><code> awk -F'\t' '$5 ~ /methyltransferase/ {print $2, $5}' OFS='\t' \ ../output/02-Apul-reference-annotation/Apulcra-genome-mRNA-IDmapping-2024_12_12.tab \ | grep "DNA"</code></pre>
<pre><code>## "ntLink_8:23126215-23133100" "DNA methyltransferase 1-associated protein 1 (DNMAP1) (DNMT1-associated protein 1)" ## "ptg000001l:8684194-8690468" "Alkylated DNA repair protein alkB homolog 8 (Probable alpha-ketoglutarate-dependent dioxygenase ABH8) (S-adenosyl-L-methionine-dependent tRNA methyltransferase ABH8) (tRNA (carboxymethyluridine(34)-5-O)-methyltransferase ABH8) (EC 2.1.1.-, EC 2.1.1.229)" ## "ptg000001l:8684194-8690468" "Alkylated DNA repair protein alkB homolog 8 (Probable alpha-ketoglutarate-dependent dioxygenase ABH8) (S-adenosyl-L-methionine-dependent tRNA methyltransferase ABH8) (tRNA (carboxymethyluridine(34)-5-O)-methyltransferase ABH8) (EC 2.1.1.-, EC 2.1.1.229)" ## "ptg000023l:4341384-4351489" "N(6)-adenine-specific methyltransferase METTL4 (Methyltransferase-like protein 4) (N(6)-adenine-specific DNA methyltransferase METTL4) (EC 2.1.1.72) (snRNA (2'-O-methyladenosine-N(6)-)-methyltransferase METTL4) (EC 2.1.1.-)" ## "ptg000023l:30502755-30503307"   "Methylated-DNA--protein-cysteine methyltransferase (EC 2.1.1.63) (6-O-methylguanine-DNA methyltransferase) (MGMT) (O-6-methylguanine-DNA-alkyltransferase)" ## "ptg000047l:7043865-7069644" "DNA (cytosine-5)-methyltransferase 1 (Dnmt1) (EC 2.1.1.37) (DNA methyltransferase GgaI) (DNA MTase GgaI) (M.GgaI) (MCMT)" ## "ptg000047l:7043865-7069644" "DNA (cytosine-5)-methyltransferase 1 (Dnmt1) (EC 2.1.1.37) (DNA methyltransferase GgaI) (DNA MTase GgaI) (M.GgaI) (MCMT)" ## "ptg000047l:7043865-7069644" "DNA (cytosine-5)-methyltransferase 1 (Dnmt1) (EC 2.1.1.37) (DNA methyltransferase GgaI) (DNA MTase GgaI) (M.GgaI) (MCMT)"</code></pre>
<p>There’s definitely DNMT machinery genes anontated in our A.pulchra genome (as expected)! Now let’s create a data frame that associated each annotated mRNA with it’s gene ID (i.e.&nbsp;FUN######) and do a more broad search for different machinery involved in methylation</p>
<pre><code># Read in data mRNA_annot &lt;- read.table("../output/02-Apul-reference-annotation/Apulcra-genome-mRNA-IDmapping-2024_12_12.tab", header=TRUE, sep='\t') %&gt;% select(-X) mRNA_geneIDs &lt;- read.table("../output/15-Apul-annotate-UTRs/Apul-mRNA-FUNids.txt", header=FALSE, sep='\t')  # Join mRNA_annot_geneID &lt;- left_join(mRNA_annot, mRNA_geneIDs, by="V1") mRNA_annot_geneID$V4 &lt;- gsub("Parent=", "", mRNA_annot_geneID$V4)  # To double-check that this worked correctly, check for NAs in the column containing gene IDs # Every mRNA has a gene ID, so this should return FALSE any(is.na(mRNA_annot_geneID$V3.y))</code></pre>
<pre><code>## [1] FALSE</code></pre>
<p>Now let’s select genes that encode different protein machinery relevant to DNA methylation</p>
<pre><code>methyl_machinery &lt;- subset(mRNA_annot_geneID,                             (grepl("methyltransferase", mRNA_annot_geneID$Protein.names)                              &amp; grepl("DNA", mRNA_annot_geneID$Protein.names))                            | grepl("DNMT", mRNA_annot_geneID$Protein.names)                            | grepl("Dnmt", mRNA_annot_geneID$Protein.names)                            | grepl("MBP", mRNA_annot_geneID$Protein.names)                            | grepl("MBD", mRNA_annot_geneID$Protein.names)                            | grepl("MECP", mRNA_annot_geneID$Protein.names)                            | grepl("UHRF", mRNA_annot_geneID$Protein.names)                            | grepl("ZBTB", mRNA_annot_geneID$Protein.names)                            | grepl("TET", mRNA_annot_geneID$Protein.names)                            )  nrow(methyl_machinery)</code></pre>
<pre><code>## [1] 23</code></pre>
<p>We find 23 mRNAs in our A.pulchra genome that encode known DNA methylation machinery!</p>
<p>Note that I stipulated the term “methyltransferase” must be accompanied by “DNA” also present in the Protein.names column. I imposed this restriction because, when I searched for “methyltransferase” alone, methyltransferases related to histone modification and modification with nucleotides other than cytosine came up.</p>
<p>Now let’s see whether any of these methylation machinery genes are putative miRNA targets, using the output from our target-prediction software, miRanda.</p>
<pre><code>miranda_apul &lt;- read.table("../output/18-Apul-interactions-functional-annotation/miRanda_miRNA_mRNA.txt", header=TRUE, sep='\t')  miranda_methyl_machinery &lt;- left_join(methyl_machinery, miranda_apul, by=c("V4" = "mRNA_FUNid"))  length(na.omit(miranda_apul$miRNA_cluster))</code></pre>
<pre><code>## [1] 6109</code></pre>
<pre><code>length(unique(na.omit(miranda_apul$miRNA_cluster)))</code></pre>
<pre><code>## [1] 39</code></pre>
<pre><code>length(na.omit(miranda_methyl_machinery$miRNA_cluster))</code></pre>
<pre><code>## [1] 0</code></pre>
<pre><code>length(unique(na.omit(miranda_methyl_machinery$miRNA_cluster)))</code></pre>
<pre><code>## [1] 0</code></pre>
<p>Miranda originally identified 6109 putative targets of 39 of our miRNAs, but none of these targets are included in our list of DNA methylation machinery mRNA. :(</p>
<p>So this means that our <strong>A.pulchra miRNAs do not putatively bind to any methylation machinery mRNA</strong> and/or I’m missing some genes in my search.</p>
<p>Karimzadeh, Mohammad Reza, Peyman Pourdavoud, Naeim Ehtesham, Mohaddese Qadbeigi, Masood Movahedi Asl, Behrang Alani, Meysam Mosallaei, and Bahram Pakzad. 2021. “Regulation of DNA Methylation Machinery by Epi-miRNAs in Human Cancer: Emerging New Targets in Cancer Therapy.” <em>Cancer Gene Therapy</em> 28 (3): 157–74. <a href="https://doi.org/10.1038/s41417-020-00210-7" class="uri">https://doi.org/10.1038/s41417-020-00210-7</a>.</p>


</section>
</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_02_07_deepdive_methyl_machinery.html</guid>
  <pubDate>Fri, 07 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Deep-dive Expression Project Planning</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_01_30_project_planning.html</link>
  <description><![CDATA[ 




<p>Now that we’ve completed a lot of the foundational work for the E5 deep-dive expression project (e.g.&nbsp;sRNA &amp; lncRNA ID, RNA and sRNA expression summaries, preliminary target prediction and coexpression work, etc.), I want to clarify our focus for project completion.</p>
<p><a href="https://github.com/urol-e5/deep-dive-expression">deep-dive-expression repo</a><br>
<a href="https://docs.google.com/document/d/1vlWJiuaxKuh6q6XOBVBrGsZkmf6R_JpJMO6wDIGzdx0/edit?tab=t.0#heading=h.gxujq2yyuafv">manuscript</a><br>
<a href="https://docs.google.com/document/d/1Fdd6xC9tJmAf9Iydcf3er-YwabKmwK3jGVw4ppfxfhM/edit?tab=t.0#heading=h.5xpib71go7rb">project meeting notes</a><br>
<a href="https://docs.google.com/document/d/14WayiHQLe3_5_aS_d4dEZj5mt1DuHvV21JpR4a96uhg/edit?tab=t.0">hypotheses brainstorming document</a></p>
<section id="hypotheses" class="level3">
<h3 class="anchored" data-anchor-id="hypotheses"><strong>Hypotheses:</strong></h3>
<section id="gene-expression-and-srna" class="level4">
<h4 class="anchored" data-anchor-id="gene-expression-and-srna"><strong>Gene expression and sRNA</strong></h4>
<ul>
<li><p>sRNA that bind to genes and are inversely correlated with expression - regulate those genes</p></li>
<li><p>There will be a suite of genes that a sRNA regulates that have similar function</p></li>
<li><p>Some lncRNAs that act as sponges (bind) sRNA will impact gene expression sRNA regulate</p></li>
<li><p>A subset of lncRNAs will regulate mRNA as evident by correlation</p></li>
<li><p>some lncRNAs may act as miRNA precursors – expect they will contain the full pre-miRNA</p></li>
<li><p>Lack of DNA methylation in a given will result in increased alternative isoforms</p></li>
</ul>
</section>
<section id="gene-expression-and-dna-methylation" class="level4">
<h4 class="anchored" data-anchor-id="gene-expression-and-dna-methylation"><strong>Gene expression and DNA methylation</strong></h4>
<ul>
<li><p>Housekeeping genes: positive relationship between expression and GBM</p></li>
<li><p>plastic/environmentally responsive genes: negative relationship between expression and GBM</p></li>
</ul>
</section>
<section id="srna-and-dna-methylation" class="level4">
<h4 class="anchored" data-anchor-id="srna-and-dna-methylation"><strong>sRNA and DNA methylation</strong></h4>
<ul>
<li><p>miRNAs modulate DNA methylation by binding to the mRNA encoding methylation machinery (e.g., DNMTs)</p>
<ul>
<li>For miRNA that target methylation machinery, expect negative relationship miRNA expression and global methylation</li>
</ul></li>
<li><p>siRNA modulate DNA methylation through RNA-directed DNA methylation by binding to genomic region and recruiting protein machinery to direct methylation</p>
<ul>
<li>Expect positive relationship between siRNA binding in a genomic region and methylation of that region</li>
</ul></li>
<li><p>siRNAs could also play a role in guiding DNA methylation to silence transposable elements</p>
<ul>
<li>Expect siRNA binding to TEs</li>
</ul></li>
</ul>
</section>
<section id="gene-expression-and-histones" class="level4">
<h4 class="anchored" data-anchor-id="gene-expression-and-histones"><strong>Gene expression and histones</strong></h4>
</section>
</section>
<section id="data" class="level3">
<h3 class="anchored" data-anchor-id="data"><strong>Data:</strong></h3>
<p><u>RNA sequencing</u></p>
<ul>
<li><p>gene expression</p></li>
<li><p>lncRNA ID &amp; expression</p></li>
</ul>
<p><u>sRNA sequencing</u></p>
<ul>
<li><p>miRNA ID &amp; expression</p></li>
<li><p>siRNA ID &amp; expression</p></li>
<li><p>piRNA ID &amp; expression (if desired)</p></li>
</ul>
<p><u>WGBS (in progress)</u></p>
<ul>
<li>DNA methylation mapping</li>
</ul>
<p>Some H4 data</p>
</section>
<section id="completed-work" class="level3">
<h3 class="anchored" data-anchor-id="completed-work"><strong>Completed work:</strong></h3>
<p>The below summary is for A.pulchra only.</p>
<p>All data processing for RNAseq and sRNAseq (including filtering, trimming, lncRNA ID, sRNA ID, summarizing to count matrices, and functional annotation) has been completed.</p>
<p><strong>genes-ncRNA:</strong></p>
<p>Two methods of miRNA-mRNA target prediction (miRanda and RNAhybrid) have been performed, and the miRanda results have been used in combination with Pearson’s Correlation to generate coexpression/interaction network. This interaction network has also been functionally annotated.</p>
<p><strong>genes-WGBS:</strong></p>
<p>none</p>
<p><strong>ncRNA-WGBS:</strong></p>
<p>I’ve looked for miRNA binding to genes that encode DNA methylation machinery (none found).</p>
<p><strong>other:</strong></p>
<p>Zoe has also run Orthofinder to facilitate cross-species comparisons</p>
</section>
<section id="goalsto-do-general" class="level3">
<h3 class="anchored" data-anchor-id="goalsto-do-general"><strong>Goals/To-Do (general):</strong></h3>
<p><em>Ensure I’m using the SMART framework (SMART: Specific, Measurable, Attainable, Relevant, and Time-bound)</em></p>
<p>Some goals are formulated to directly address one of the hypotheses listed above, and (for now) should be performed on A.pulchra data only.</p>
<ol type="1">
<li><p><em>“sRNA that bind to genes and are inversely correlated with expression - regulate those genes”</em><br>
Use gene-miRNA interaction network to create some basic figures summarizing nature and extent of interactions (e.g.&nbsp;how many genes with how many miRNAs, how many genes does a single RNA usually interact with and vice versa, how many positive vs.&nbsp;negative relationships are there)</p></li>
<li><p><em>“There will be a suite of genes that a sRNA regulates that have similar function”</em><br>
Use functional annotation of the gene-miRNA interaction network to identify putative function of each miRNA based on function of associated genes.</p></li>
<li><p>For predicted miRNA targets, compare functional composition of targets to functional composition of full reference.<br>
(Basically, I want to see whether miRNAs preferentially regulate any functional classes).</p></li>
<li><p>Formally name each miRNA, matching the names assigned during deep-dive when possible.</p></li>
<li><p>If an miRNA is formally described (e.g.&nbsp;mir-100), compare/contrast its described function with the putative function determined during (2)</p></li>
<li><p><em>“Some lncRNAs that act as sponges (bind) sRNA will impact gene expression sRNA regulate”<br>
</em>Use miRanda to predict miRNA-lncRNA binding and evaluate correlated expression of putative binding pairs to generate miRNA-lncRNA interaction network.</p></li>
<li><p><em>“A subset of lncRNAs will regulate mRNA as evident by correlation”</em><br>
Evaluate correlated expression of lncRNA and mRNA.</p></li>
<li><p><em>“some lncRNAs may act as miRNA precursors – expect they will contain the full pre-miRNA”</em><br>
Use BLAST to search for lncRNAs that fully contain pre-miRNA sequences.</p></li>
<li><p>Using simulated WGBS data, prep pipeline to summarize methylation (whole genome methylation levels, GBM/distribution across genome features, etc.)</p></li>
<li><p><em>“Housekeeping genes: positive relationship between expression and GBM”</em> and <em>“plastic/environmentally responsive genes: negative relationship between expression and GBM”</em><br>
Using simulated WGBS data, prep pipeline to delimit genes by function (housekeeping vs.&nbsp;responsive) evaluate relationship of both classes with gene body methylation.</p></li>
<li><p><em>“siRNA modulate DNA methylation through RNA-directed DNA methylation by binding to genomic region and recruiting protein machinery to direct methylation”</em><br>
Use miRanda/RNAhybrid to predict siRNA binding to the genome. Using simulated WGBS data, prep pipeline to test whether siRNA binding is significantly associated with methylation</p></li>
<li><p>siRNAs could also play a role in guiding DNA methylation to silence transposable elements</p>
<p>Use miRanda/RNAhybrid to predict siRNA binding to TEs. Evaluate correlated expression of siRNAs and TEs (expecting a negative relationship).</p></li>
</ol>
<p>Multiomics?</p>
<p>At some point we’ll need to a) replicate these analyses on Peve and Ptuh, and b) run some cross species comparisons</p>
</section>
<section id="goalsplan-for-friday-131-meeting" class="level3">
<h3 class="anchored" data-anchor-id="goalsplan-for-friday-131-meeting"><strong>Goals/Plan for Friday (1/31) meeting:</strong></h3>
<ul>
<li><p>Clarify involvement/role of E5 molecular group members – ensure everyone who is/would like to be involved in deep-dive expression manuscript has something to be working on. Assign out goals/tasks if people</p></li>
<li><p>Define the overarching lens/focus of the manuscript</p></li>
<li><p>Once tasks are assigned to individuals and a rough timeline is selected, add tasks as Github issues</p></li>
<li><p>Add current progress to manuscript?</p></li>
</ul>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2025_01_30_project_planning.html</guid>
  <pubDate>Thu, 30 Jan 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Rerunning ShortStack for deep-dive-expression</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_22_shortstack_4.1.0_reruns.html</link>
  <description><![CDATA[ 




<p>We performed sRNA discovery for <em>A. pulchra</em>, <em>P. evermanni</em>, and <em>P. tuahiniensis</em> (formerly identified as <em>P. meandrina</em>) as part of the E5 <code>deep-dive</code> initiative. Notably, we used the <em>A. millipora</em> genome as an alignment reference during <em>A. pulchra</em> sRNA discovery because no <em>A. pulchra</em> genome was available at the time. However, collaborators are have now assembled an <em>A. pulchra</em> genome, so we can rerun sRNA discovery with a better reference for use in the <code>deep-dive-expression</code> project. Additionally, the sRNA discovery tool we decided to use, <a href="https://github.com/MikeAxtell/ShortStack">ShortStack</a> <span class="citation" data-cites="axtell2013">Axtell (2013)</span>, has a new update (v.4.1.0) with functionality for visualizing miRNA hairpin structures and generating genome-browser-ready quantitative coverage tracks of aligned small RNAs. These new features could prove useful, so I’m just rerunning ShortStack for all three species, using the <em>pulchra</em> genome for <em>A. pulchra</em> discovery and ShortStack 4.1.0 for all three.</p>
<p><u><strong>Original <code>deep-dive</code> sRNA discovery, using ShortStack 4.0.3 (for reference):</strong></u></p>
<p>A. pulchra (using A. millipora genome)</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.md">knitted .md</a></p></li>
</ul>
<p>P. evermanni</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged.md">knitted .md</a></p></li>
</ul>
<p>P. tuahiniensis (identified here as P. meandrina, using P. meandrina genome)</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.md">knitted .md</a></p></li>
</ul>
<p><u><strong><code>deep-dive-expression</code> reruns with ShortStack 4.1.0:</strong></u></p>
<p>A. pulchra (using A. pulchra genome)</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/11-Apul-sRNA-ShortStack_4.1.0-pulchra_genome.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/11-Apul-sRNA-ShortStack_4.1.0-pulchra_genome.md">knitted .md</a></p></li>
</ul>
<p>P. evermanni</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/E-Peve/code/05-Peve-sRNA-ShortStack_4.1.0.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/E-Peve/code/05-Peve-sRNA-ShortStack_4.1.0.md">knitted .md</a></p></li>
</ul>
<p>P. tuahiniensis (using P. meandrina genome)</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/F-Ptuh/code/05-Ptuh-sRNA-ShortStack_4.1.0.Rmd">code</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/F-Ptuh/code/05-Ptuh-sRNA-ShortStack_4.1.0.md">knitted .md</a></p></li>
</ul>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<section id="comparing-original-srna-discovery-to-reruns" class="level3">
<h3 class="anchored" data-anchor-id="comparing-original-srna-discovery-to-reruns">Comparing original sRNA discovery to reruns</h3>
<table class="table">
<caption>A. pulchra</caption>
<colgroup>
<col style="width: 26%">
<col style="width: 27%">
<col style="width: 25%">
<col style="width: 18%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th style="text-align: right;">ShortStack 4.0.3<br>
(A. millipora genome)</th>
<th style="text-align: right;">ShortStack 4.1.0<br>
(A. pulchra genome)</th>
<th style="text-align: right;">𝚫</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Potential miRNA loci</td>
<td style="text-align: right;">18895</td>
<td style="text-align: right;">20789</td>
<td style="text-align: right;">+1894 (10%)</td>
</tr>
<tr class="even">
<td>Identified miRNA</td>
<td style="text-align: right;">38</td>
<td style="text-align: right;">39</td>
<td style="text-align: right;">+1 (2.6%)</td>
</tr>
<tr class="odd">
<td>Database matches</td>
<td style="text-align: right;">69</td>
<td style="text-align: right;">131</td>
<td style="text-align: right;">+62 (90%)</td>
</tr>
</tbody>
</table>
<table class="table">
<caption>P. evermanni</caption>
<colgroup>
<col style="width: 29%">
<col style="width: 24%">
<col style="width: 24%">
<col style="width: 20%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th style="text-align: right;">ShortStack 4.0.3</th>
<th style="text-align: right;">ShortStack 4.1.0</th>
<th style="text-align: right;">𝚫</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Potential miRNA loci</td>
<td style="text-align: right;">16736</td>
<td style="text-align: right;">16893</td>
<td style="text-align: right;">+157 (0.9%)</td>
</tr>
<tr class="even">
<td>Identified miRNA</td>
<td style="text-align: right;">46</td>
<td style="text-align: right;">45</td>
<td style="text-align: right;">-1 (2.2%)</td>
</tr>
<tr class="odd">
<td>Database matches</td>
<td style="text-align: right;">37</td>
<td style="text-align: right;">38</td>
<td style="text-align: right;">+1 (2.7%)</td>
</tr>
</tbody>
</table>
<table class="table">
<caption>P. tuahniensis</caption>
<colgroup>
<col style="width: 29%">
<col style="width: 24%">
<col style="width: 24%">
<col style="width: 20%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th style="text-align: right;">ShortStack 4.0.3</th>
<th style="text-align: right;">ShortStack 4.1.0</th>
<th style="text-align: right;">𝚫</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Potential miRNA loci</td>
<td style="text-align: right;">7220</td>
<td style="text-align: right;">7189</td>
<td style="text-align: right;">-31 (0.4%)</td>
</tr>
<tr class="even">
<td>Identified miRNA</td>
<td style="text-align: right;">37</td>
<td style="text-align: right;">37</td>
<td style="text-align: right;">none</td>
</tr>
<tr class="odd">
<td>Database matches</td>
<td style="text-align: right;">96</td>
<td style="text-align: right;">117</td>
<td style="text-align: right;">+21 (22%)</td>
</tr>
</tbody>
</table>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load necessary library</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: package 'ggplot2' was built under R version 4.2.3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: package 'tidyr' was built under R version 4.2.3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the data frame for all species</span></span>
<span id="cb5-2">miRNA_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Species =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptuh"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ShortStack_Version =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4.0.3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4.1.0"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb5-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Potential_miRNA_loci =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18895</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20789</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16736</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16893</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7220</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7189</span>),</span>
<span id="cb5-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Identified_miRNA =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">46</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>),</span>
<span id="cb5-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Database_matches =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">69</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">131</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">117</span>)</span>
<span id="cb5-8">)</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reshape the data to long format for facetting</span></span>
<span id="cb5-11">miRNA_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(miRNA_data,</span>
<span id="cb5-12">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Potential_miRNA_loci"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Identified_miRNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Database_matches"</span>),</span>
<span id="cb5-13">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Metric"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>)</span>
<span id="cb5-14">miRNA_long<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Metric <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(miRNA_long<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Metric, </span>
<span id="cb5-15">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Potential_miRNA_loci"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Identified_miRNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Database_matches"</span>))</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Facet-wrapped plot for all three metrics</span></span>
<span id="cb5-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(miRNA_long, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> ShortStack_Version)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodge"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Metric, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Facet by Metric and allow different y-axis scales</span></span>
<span id="cb5-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"miRNA Metrics by Species and ShortStack Version"</span>,</span>
<span id="cb5-22">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-23"> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># scale_fill_manual(values = c("4.0.3" = "blue", "4.1.0" = "red")) +</span></span>
<span id="cb5-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_22_shortstack_4.1.0_reruns_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>*Note, Apul also used a different genome for the v.4.1.0 run</p>
</section>
<section id="structural-visualizations" class="level3">
<h3 class="anchored" data-anchor-id="structural-visualizations">Structural visualizations</h3>
<p>ShortStack 4.1.0 also automatically generates visualizations of the hairpin structure of each identified miRNA, stored as a pdf. As an example, below is the <a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/output/11-Apul-sRNA-ShortStack_4.1.0-pulchra_genome/ShortStack_out/strucVis/Cluster_18728.ps.pdf">visualization for A. pulchra Cluster 18728</a>, which was annotated as a valid miRNA and database matched the well-studied miRNA miR-100.<br>
</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Cluster_18728.ps.jpg" class="img-fluid"></p>



</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-axtell2013" class="csl-entry">
Axtell, Michael J. 2013. <span>“ShortStack: Comprehensive Annotation and Quantification of Small RNA Genes.”</span> <em>RNA</em> 19 (6): 740–51. <a href="https://doi.org/10.1261/rna.035279.112">https://doi.org/10.1261/rna.035279.112</a>.
</div>
</div></section></div> ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_22_shortstack_4.1.0_reruns.html</guid>
  <pubDate>Tue, 19 Nov 2024 00:20:55 GMT</pubDate>
</item>
<item>
  <title>sRNA expression summaries</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_11_11_updated_sRNA_summaries.html</link>
  <description><![CDATA[ 




<p>I summarized sRNA expression for all three E5 species. This includes summary of both raw and normalized counts of all sRNAs, miRNAs, and siRNAs. sRNA, miRNA, and siRNA identification performed using ShortStack 4.1.0.</p>
<p><a href="https://github.com/urol-e5/deep-dive-expression/tree/main"><code>deep-dive-expression</code> repo</a></p>
<p>Rendered code files:</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/D-Apul/code/03.1-Apul-sRNA-summary.md">Apul</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/E-Peve/code/03.1-Peve-sRNA-summary.md">Peve</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/blob/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary.md">Ptuh</a></p></li>
</ul>
<p>This also included generating count matrices for raw, normalized, and variance stabilized counts of all sRNA, just miRNA, and just siRNA.</p>
<p>count matrices:</p>
<ul>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/tree/main/D-Apul/output/03.1-Apul-sRNA-summary">Apul</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/tree/main/E-Peve/output/03.1-Peve-sRNA-summary">Peve</a></p></li>
<li><p><a href="https://github.com/urol-e5/deep-dive-expression/tree/main/F-Ptuh/output/03.1-Ptuh-sRNA-summary">Ptuh</a></p></li>
</ul>
<p>As a reminder, normalization and variance stabilization are two different transformations that serve different purposes.</p>
<p><strong>Normalizing</strong> the transcript counts <strong>adjusts for differences in library size</strong> or sequencing depth, but <strong>retains count-like properties</strong>. Normalized counts are most useful for things like visualizing expression levels and differential expression analysis.</p>
<p><strong>Variance stabilization</strong> aims to make the variance of the transformed data approximately independent of the mean, <strong>reducing heteroscedasticity</strong> (the relationship between variance and mean) and “smoothing” out the variance at low counts. Notably, the transformed data is <strong>no longer on the original count scale</strong>. The transformation makes the variance roughly constant across the range of counts, which makes it easier to interpret patterns in the data visually. Variance stabilized data is most useful for exploratory data analysis, like PCA, clustering, and heatmaps, and is also the transformation we’ll want to use before WGCNA.</p>
<p>Here’s some of the figures generated in these summary docs</p>
<section id="total-transcripts-raw" class="level2">
<h2 class="anchored" data-anchor-id="total-transcripts-raw">Total transcripts (raw)</h2>
<p>All sRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/transcript-counts-plot-1.png" class="img-fluid figure-img" width="400"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/transcript-counts-plot-1.png" class="img-fluid figure-img" width="400"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/transcript-counts-plot-1.png" class="img-fluid figure-img" width="400"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>miRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/miRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/miRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/miRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>siRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/siRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/siRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/siRNA-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="total-transcripts-normalized" class="level2">
<h2 class="anchored" data-anchor-id="total-transcripts-normalized">Total transcripts (normalized)</h2>
<p>All sRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>miRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/miRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/miRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/miRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>siRNA:</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/siRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/siRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/siRNA-norm-transcript-counts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="unique-transcripts" class="level2">
<h2 class="anchored" data-anchor-id="unique-transcripts">Unique transcripts</h2>
<p>All sRNA:</p>
<p>Little variation within a species, but quite a large difference among species. Apul specimens expressed ~19,000 unique sRNA transcripts, Peve expressed ~15,700, and Ptuh specimens expressed dramatically fewer at ~6700 unique sRNA transcripts.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/total-unique-transcripts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/total-unique-transcripts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/total-unique-transcripts-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>miRNA:</p>
<p>Despite the differences in total unique sRNA transcripts, all three species have <strong>similar numbers of unique miRNAs</strong> (though, note our deep-dive exploration showed there is little miRNA overlap among species).</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/total-unique-miRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/total-unique-miRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/total-unique-miRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>siRNA:</p>
<p>There is again a more noticable difference in numbers of unique siRNAs. <strong>Apul have ~120, Peve ~155, and Ptuh ~90</strong>.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/D-Apul/code/03.1-Apul-sRNA-summary_files/figure-gfm/total-unique-siRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Apul</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/E-Peve/code/03.1-Peve-sRNA-summary_files/figure-gfm/total-unique-siRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Peve</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 33.3%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive-expression/raw/main/F-Ptuh/code/03.1-Ptuh-sRNA-summary_files/figure-gfm/total-unique-siRNA-plot-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Ptuh</figcaption>
</figure>
</div>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_11_11_updated_sRNA_summaries.html</guid>
  <pubDate>Mon, 11 Nov 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Lit Review: Understanding interactions of sRNA and DNA methylation</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_01_sRNA_DNA_methylation_interactions.html</link>
  <description><![CDATA[ 







 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_10_01_sRNA_DNA_methylation_interactions.html</guid>
  <pubDate>Mon, 28 Oct 2024 22:19:43 GMT</pubDate>
</item>
<item>
  <title>Programs for identifying miRNA targets</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_07_19_mRNA_targetID_programs.html</link>
  <description><![CDATA[ 




<p><a href="https://www.sciencedirect.com/science/article/pii/S0888754322001495#s0055">miRanda</a></p>
<p>Seems like a solid option, seen it cited in <a href="https://www.sciencedirect.com/science/article/pii/S0888754322001495#s0055">coral miRNA paper</a>, and listed in <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3927079/">review paper</a> <span class="citation" data-cites="peterson_common_2014">Peterson et al. (2014)</span> as one of the OG, more regularly maintained miRNA target prediction programs that takes user sequence input. Most recently updated 2010. Also, available as downloadable software run on linux/unix, so more reproducible than the other main miRNA target prediction softwares which are web based. Only problem is that the miRanda site (<a href="http://www.microrna.org/">www.microrna.org</a>) doesn’t seem to be functional… This is extra weird because the coral miRNA paper that used it was from 2022, which is quite recent.<br>
<br>
<a href="https://bioinformaticsworkbook.org/dataAnalysis/SmallRNA/Miranda_miRNA_Target_Prediction.html#gsc.tab=0">miRanda tutorial</a></p>
<p>Found a <a href="https://regendbase.org/tools/miranda">site</a> that appears to use the miRanda algorithm in a web based tool, and it seems to be functioning normally</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot 2024-07-19 165134.png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot 2024-07-19 165241.png" class="img-fluid"></p>
<p>I tried emailing the corresponding authors of the miRanda papers, but I’m not confident I’ll hear back. In the meantime I should also look into R package options, which weren’t really covered in the 2014 review I’ve been referencing.</p>
<section id="mirtarrnaseq" class="level3">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">mirTarRnaSeq</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-peterson_common_2014" class="csl-entry">
Peterson, Sarah M., Jeffrey A. Thompson, Melanie L. Ufkin, Pradeep Sathyanarayana, Lucy Liaw, and Clare Bates Congdon. 2014. <span>“Common Features of <span class="nocase">microRNA</span> Target Prediction Tools.”</span> <em>Frontiers in Genetics</em> 5 (February): 23. <a href="https://doi.org/10.3389/fgene.2014.00023">https://doi.org/10.3389/fgene.2014.00023</a>.
</div>
</div></section></div> ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_07_19_mRNA_targetID_programs.html</guid>
  <pubDate>Fri, 19 Jul 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>ShortStack: mature vs. star sequences incorrect?</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_06_04_ShortStack_mature_v_star.html</link>
  <description><![CDATA[ 




<p>See <a href="https://github.com/urol-e5/deep-dive/issues/49">E5 deep-dive Github issue #49</a></p>
<p>While looking at ShortStack database matches, for the three species I realized that all three have matches to multiple published sequences of miR-2030, but miR-2030 was not one of the miRNAs identified as conserved between the three species. After poking around I realized that the Apul miR-2030 miRNA and Peve miR-2030 have identical mature miRNA sequences, but the Pmea miR-2030 has a totally different mature sequence. Instead, the <em>star</em> sequence of Pmea miR-2030 matches the mature sequences for Apul miR-2030 and Peve miR-2030. This raises the possibility that ShortStack is incorrectly distinguishing between mature and star sequences, which would throw a bit of a wrench in the current workflow to identify conserved miRNAs. I also noted something similar when <a href="../../../posts/projects/E5_coral/2024_05_17_shortstack_mirdeep2_comparisons.html">comparing ShortStack outputs to the miRdeep2 output</a>.</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot (248).png" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot (249).png" class="img-fluid"></p>
<p>As a reminder, miRNAs originate as primary miRNA transcripts (“pri-miRNAs”) transcribed from genes, which are characteristically folded in a “hairpin” structure. These pri-miRNAs are then cleaved at their base to form precursor miRNAs (“pre-miRNAs”). The pre-miRNA loop is then removed by Dicer, leaving a mature miRNA duplex. Both of these strands (5’ and 3’) can be loaded into an Argonaute (AGO) protein complex to form an RNA-induced silencing complex (RISC), which then guides gene expression. However, one strand is usually preferentially loaded, in part based on its thermodynamic stability. Strands that are not loaded are unwound from their complement and generally degraded by cellular machinery. The preferentially-loaded strand is commonly titled the “mature miRNA,” while the unloaded strand is commonly called the “miRNA*” or “miRNA star”. Since the AGO-loaded strand (mature miRNA) is the one that actually influences gene expression, this is the strand that is considered important during miRNA identification and analysis. (Summarized from <span class="citation" data-cites="obrien_overview_2018">(O’Brien et al. 2018)</span>)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/miRNA-biogenisis.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">miRNA biogenisis <span class="citation" data-cites="tomari_microrna_2005">(Tomari and Zamore 2005)</span></figcaption>
</figure>
</div>
<p>It isn’t entirely clear from the ShortStack documentation how it distinguishes between mature and star sequences. What sequence features would indicate one strand is more likely to be loaded on to the RISC complex than the other? In addition, O’Brien et al.&nbsp;(2018) seem to suggest that both the mature and star miRNA molecules could play some role in gene expression – does that mean we should be considering both to be important?</p>




<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-obrien_overview_2018" class="csl-entry">
O’Brien, Jacob, Heyam Hayder, Yara Zayed, and Chun Peng. 2018. <span>“Overview of <span>MicroRNA</span> <span>Biogenesis</span>, <span>Mechanisms</span> of <span>Actions</span>, and <span>Circulation</span>.”</span> <em>Frontiers in Endocrinology</em> 9 (August): 402. <a href="https://doi.org/10.3389/fendo.2018.00402">https://doi.org/10.3389/fendo.2018.00402</a>.
</div>
<div id="ref-tomari_microrna_2005" class="csl-entry">
Tomari, Yukihide, and Phillip D. Zamore. 2005. <span>“<span>MicroRNA</span> <span>Biogenesis</span>: <span>Drosha</span> <span>Can</span>’t <span>Cut</span> <span>It</span> Without a <span>Partner</span>.”</span> <em>Current Biology</em> 15 (2): R61–64. <a href="https://doi.org/10.1016/j.cub.2004.12.057">https://doi.org/10.1016/j.cub.2004.12.057</a>.
</div>
</div></section></div> ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_06_04_ShortStack_mature_v_star.html</guid>
  <pubDate>Mon, 03 Jun 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing ShortStack outputs to miRdeep2</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_05_17_shortstack_mirdeep2_comparisons.html</link>
  <description><![CDATA[ 




<p>Both ShortStack and miRdeep2 are programs for identifying both known and novel miRNAs from a dataset based on an input database of known miRNAs and on expected miRNA size and precursor structures. However, they’re giving pretty different output counts. Today I want to look at how much overlap there is in identified miRNAs between the two.</p>
<p>Rendered code:</p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/17-Apul-ShortStack-miRdeep2-comparison.md">A. pulchra</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/17-Peve-ShortStack-miRdeep2-comparison.md">P. evermanni</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/17-Pmea-ShortStack-miRdeep2-comparison.md">P. meandrina</a></p>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<table class="table">
<colgroup>
<col style="width: 12%">
<col style="width: 16%">
<col style="width: 23%">
<col style="width: 21%">
<col style="width: 28%">
</colgroup>
<tbody>
<tr class="odd">
<td><strong>Species</strong></td>
<td><strong>Identified miRNAs</strong></td>
<td><strong>miRNAs with database match</strong></td>
<td><strong>Database matches *not* classified as miRNA</strong></td>
<td><strong># of ShortStack miRNAs that are also classified as miRNA by miRdeep2</strong></td>
</tr>
<tr class="even">
<td>A.pulchra</td>
<td>38</td>
<td>24</td>
<td>44</td>
<td>36</td>
</tr>
<tr class="odd">
<td>P.evermanni</td>
<td>46</td>
<td>9</td>
<td>27</td>
<td>30</td>
</tr>
<tr class="even">
<td>P.meandrina</td>
<td>36</td>
<td>9</td>
<td>20</td>
<td>27</td>
</tr>
</tbody>
</table>
<p>I used bedtools intersectBed to find shared sequences in the ShortStack and miRdeep2 mature miRNA output files.</p>
</section>
<section id="notes" class="level2">
<h2 class="anchored" data-anchor-id="notes">Notes</h2>
<p>Interestingly, in all three of the species I saw an example of an miRNA identified by ShortStack that matched <em>two</em> loci identified as miRNAs by miRdeep2.</p>
<p>In one of these examples (A.pulchra), the mature miRNA sequences for both the miRdeep2 miRNAs were identical, but the <em>precursor</em> sequences were different – could this be an example of two different precursors that are processed into the same miRNA?</p>
<pre><code>NC_058072.1_Acropora_millepora_isolate_JS-1_chromosome_7_Amil_v2.1_whole_genome_shotgun_sequence_295614 12623.6     -   24755   24435   0   320 no  -   tca-miR-11646-3p_MIMAT0045620_Tribolium_castaneum_miR-11646-3p  -   -   ugggugucaucuauuauguuuu  aacauaaaagauggcacc  ugggugucaucuauuauguuuuugcuuguuaaaacauaaaagauggcacc  NC_058072.1_Acropora_millepora_isolate_JS-1_chromosome_7_Amil_v2.1_whole_genome_shotgun_sequence:19030617..19030667:+

NC_058072.1_Acropora_millepora_isolate_JS-1_chromosome_7_Amil_v2.1_whole_genome_shotgun_sequence_295613 1.1     -   24449   24435   14  0   no  -   tca-miR-11646-3p_MIMAT0045620_Tribolium_castaneum_miR-11646-3p  -   -   ugggugucaucuauuauguuuu  aauguaacaaaauugacggccaga    aauguaacaaaauugacggccagaagccguacguauguagaaaauguggggugagugccugggugucaucuauuauguuuu   NC_058072.1_Acropora_millepora_isolate_JS-1_chromosome_7_Amil_v2.1_whole_genome_shotgun_sequence:19030558..19030639:+


mature miRNA sequences for these two loci:
ugggugucaucuauuauguuuu
ugggugucaucuauuauguuuu


precursor miRNA sequences for these two loci:
ugggugucaucuauuauguuuuugcuuguuaaaacauaaaagauggcacc
aauguaacaaaauugacggccagaagccguacguauguagaaaauguggggugagugccugggugucaucuauuauguuuu</code></pre>
<p>In the other two cases (P.evermanni and P.meandrina) the pairs of loci had very similar precursor sequences and <em>reversed</em> mature and star sequences! In other words, the mature miRNA sequence for one is almost identical to the miRNA* sequence of the other, and vice versa!</p>
<p>P. evermanni:</p>
<pre><code>Porites_evermani_scaffold_334_234019    5.6     -   969 686 0   283 yes -   gga-miR-12259-5p_MIMAT0050009_Gallus_gallus_miR-12259-5p    -   -   ugcagguacaguuauaaggu    accuuauaacuguaccugccaa  ugcagguacaguuauaagguccccuugguggaccuuauaacuguaccugccaa   Porites_evermani_scaffold_334:153573..153626:-

Porites_evermani_scaffold_334_233889    5.5     -   111 96  0   15  yes -   cpi-miR-9592-5p_MIMAT0037980_Chrysemys_picta_miR-9592-5p    -   -   gaccuuauaacuguaccugc    gcagguacaguuauaaggucc   gcagguacaguuauaagguccaccaaggggaccuuauaacuguaccugc   Porites_evermani_scaffold_334:153576..153625:+


mature miRNA sequences for these two loci:
ugcagguacaguuauaaggu
gaccuuauaacuguaccugc


miRNA* sequences for these two loci:
accuuauaacuguaccugccaa
gcagguacaguuauaaggucc


precursor miRNA sequences for these two loci:
ugcagguacaguuauaagguccccuugguggaccuuauaacuguaccugccaa
gcagguacaguuauaagguccaccaaggggaccuuauaacuguaccugc</code></pre>
<p>P. meandrina:</p>
<pre><code>Pocillopora_meandrina_HIv1___Sc0000000_1750 6153        -   12060   11275   0   785 yes -   hsa-miR-2117_MIMAT0011162_Homo_sapiens_miR-2117 -   -   uguucucucugcaguaagcaugu augcuugcuguaaagagaacuug uguucucucugcaguaagcauguuuugacaugcuugcuguaaagagaacuug    Pocillopora_meandrina_HIv1___Sc0000000:818048..818100:+

Pocillopora_meandrina_HIv1___Sc0000000_34562    10      -   11  9   0   2   yes -   egr-miR-153-5p_MIMAT0037428_Echinococcus_granulosus_miR-153-5p  -   -   augcuuacugcagagagaacaug aaguucucuuuacagcaagcaugucaaa    aaguucucuuuacagcaagcaugucaaaacaugcuuacugcagagagaacaug   Pocillopora_meandrina_HIv1___Sc0000000:818046..818099:-


mature miRNA sequences for these two loci:
uguucucucugcaguaagcaugu
augcuuacugcagagagaacaug


miRNA* sequences for these two loci:
augcuugcuguaaagagaacuug
aaguucucuuuacagcaagcaugucaaa


precursor miRNA sequences for these two loci:
uguucucucugcaguaagcauguuuugacaugcuugcuguaaagagaacuug
aaguucucuuuacagcaagcaugucaaaacaugcuuacugcagagagaacaug</code></pre>
<p>Could this just be a case of miRdeep2 incorrectly distinguishing the mature and star sequences for one of these loci?</p>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_05_17_shortstack_mirdeep2_comparisons.html</guid>
  <pubDate>Fri, 17 May 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Summarizing and visualizing ShortStack outputs</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_05_16_shortstack_visualizations.html</link>
  <description><![CDATA[ 




<p>Rendered code:</p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.md">A. pulchra</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged.md">P. evermanni</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase.md">P. meandrina</a></p>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<table class="table">
<tbody>
<tr class="odd">
<td></td>
<td><strong>ShortStack</strong></td>
<td><strong>miRdeep2</strong></td>
</tr>
<tr class="even">
<td><strong>Species</strong></td>
<td><strong>Identified miRNAs</strong></td>
<td><strong>miRNAs with database match</strong></td>
</tr>
<tr class="odd">
<td>A.pulchra</td>
<td>38</td>
<td>24</td>
</tr>
<tr class="even">
<td>P.evermanni</td>
<td>46</td>
<td>9</td>
</tr>
<tr class="odd">
<td>P.meandrina</td>
<td>36</td>
<td>9</td>
</tr>
</tbody>
</table>
<p>It looks like all of the ShortStack miRNAs with database matches are matching the annoated cnidarian miRNAs curated by Jill, not standard miRBase entries. These curated cnidarian known miRNAs are almost exclusively from <em>Acropora</em> and <em>Stylophora</em> species, so it makes sense that <em>Acropora pulchra</em> has many more database matches than the other species.</p>
</section>
<section id="a.-pulchra" class="level2">
<h2 class="anchored" data-anchor-id="a.-pulchra">A. pulchra</h2>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/D-Apul/output/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Apul_ShortStack_miRNA_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/D-Apul/output/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Apul_ShortStack_dbmatch_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/D-Apul/output/13.2.1-Apul-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Apul_ShortStack_venn.png?raw=true" class="img-fluid"></p>
</section>
<section id="p.-meandrina" class="level2">
<h2 class="anchored" data-anchor-id="p.-meandrina">P. meandrina</h2>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/E-Peve/output/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged/figures/Peve_ShortStack_miRNA_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/E-Peve/output/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged/figures/Peve_ShortStack_dbmatch_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/E-Peve/output/08.2-Peve-sRNAseq-ShortStack-31bp-fastp-merged/figures/Peve_ShortStack_venn.png?raw=true" class="img-fluid"></p>
</section>
<section id="p.-evermanni" class="level2">
<h2 class="anchored" data-anchor-id="p.-evermanni">P. evermanni</h2>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/F-Pmea/output/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Pmea_ShortStack_miRNA_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/F-Pmea/output/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Pmea_ShortStack_dbmatch_histogram.png?raw=true" class="img-fluid"></p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/https:/github.com/urol-e5/deep-dive/blob/main/F-Pmea/output/13.2.1-Pmea-sRNAseq-ShortStack-31bp-fastp-merged-cnidarian_miRBase/figures/Pmea_ShortStack_venn.png?raw=true" class="img-fluid"></p>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_05_16_shortstack_visualizations.html</guid>
  <pubDate>Thu, 16 May 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Generating a genes fasta for P. evermanni</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_02_07_Peve_transcriptome.html</link>
  <description><![CDATA[ 




<p>In the process of running <a href="../../../posts/projects/E5_coral/2024_02_06_RNAseq_kallisto.html">kallisto on the three E5 deep dive species</a>, we realized that there’s no transcriptome FASTA available for <em>P. evermanni</em>. That means we need to generate one!</p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/12-Peve-RNAseq-kallisto.md">Rendered code</a></p>
<p><u>Related posts:</u><br>
<a href="\posts\projects\E5_coral\2024_02_06_RNAseq_kallisto.qmd">RNAseq abundance quantification (A.Pulchra, P.evermanni, P.meandrina)</a><br>
<a href="\posts\projects\E5_coral\2024_01_31_Peve_kallisto.qmd">P.evermanni RNAseq kallisto debugging</a><br>
<a href="\posts\projects\misc\2024_02_08_bedtools_gffvbed.qmd">Testing bedtools: gff vs bed input file</a></p>
<section id="starter-files" class="level3">
<h3 class="anchored" data-anchor-id="starter-files">Starter files</h3>
<p>The closest file to a <em>P. evermanni</em> transcriptome that we have is a <em>P.evermanni</em> coding sequence (CDS) gff file, and a corresponding genome scaffolds FASTA.</p>
<p>head of gff:</p>
<pre><code>Porites_evermani_scaffold_1 Gmove mRNA 3107 4488 543 - . ID=Peve_00000001;Name=Peve_00000001;start=0;stop=1;cds_size=543 Porites_evermani_scaffold_1 Gmove CDS 3107 3444 . - . Parent=Peve_00000001 
Porites_evermani_scaffold_1 Gmove CDS 4284 4488 . - . Parent=Peve_00000001</code></pre>
<p>A gff file lists information that can be used to identify and retrieve specific sequences. The first column lists the region or scaffold of a reference genome in which the sequence can be found; the third identifies which genomic feature (e.g., mRNA, CDS, UTR) the sequence is; and the fourth and fifth are genomic coordinates for the beginning and end of the sequence. Since we have both the coding sequences gff and a reference fasta, we should be able to extract FASTA sequences for all of the relevant sequences in the gff!</p>
</section>
<section id="extract-cds-sequences" class="level3">
<h3 class="anchored" data-anchor-id="extract-cds-sequences">Extract CDS sequences</h3>
<p>First, it looks like the gff has features labelled a little weirdly. Normally we’d want all of the mRNA sequences, but it looks like this file lists mRNA sequences that include introns. Instead, we want all of the CDS sequences associated with each mRNA (association is denoted in the final column with a parent mRNA ID, e.g.&nbsp;“Parent=Peve_00000001”). That means the first step is to extract all of the CDS sequences from our gff file.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract only the CDS sequence lines from the gff</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CDS'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff_filtered}</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 5 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff_filtered}</span></span></code></pre></div>
</div>
<pre><code>Porites_evermani_scaffold_1 Gmove   CDS 3107    3444    .   -   .   Parent=Peve_00000001
Porites_evermani_scaffold_1 Gmove   CDS 4284    4488    .   -   .   Parent=Peve_00000001
Porites_evermani_scaffold_1 Gmove   CDS 424479  425361  .   -   .   Parent=Peve_00000002
Porites_evermani_scaffold_1 Gmove   CDS 426181  426735  .   -   .   Parent=Peve_00000002
Porites_evermani_scaffold_1 Gmove   CDS 427013  427140  .   -   .   Parent=Peve_00000002</code></pre>
</section>
<section id="convert-gff-to-bed" class="level3">
<h3 class="anchored" data-anchor-id="convert-gff-to-bed">Convert gff to bed</h3>
<p>Then we convert this filtered CDS gff file to a bed file, which has slightly different formatting. We’re doing this because we’ll be using a tool called bedtools getfasta, which can take both gff and bed files, but which I trust more to appropriately parse bed files (though, see post on whether it can handle gff files correctly as well).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure bedops can find its dependencies when running</span></span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/home/shared/bedops_linux_x86_64-v2.4.41/bin:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bedops}</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/gff2bed</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-5">--do-not-sort <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff_filtered}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_bed}</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 3 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_gff_filtered}</span></span>
<span id="cb4-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb4-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 3 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_bed}</span></span></code></pre></div>
</div>
<pre><code>Porites_evermani_scaffold_1 Gmove   CDS 3107    3444    .   -   .   Parent=Peve_00000001
Porites_evermani_scaffold_1 Gmove   CDS 4284    4488    .   -   .   Parent=Peve_00000001
Porites_evermani_scaffold_1 Gmove   CDS 424479  425361  .   -   .   Parent=Peve_00000002

Porites_evermani_scaffold_1 3106    3444    .   .   -   Gmove   CDS .   Parent=Peve_00000001
Porites_evermani_scaffold_1 4283    4488    .   .   -   Gmove   CDS .   Parent=Peve_00000001
Porites_evermani_scaffold_1 424478  425361  .   .   -   Gmove   CDS .   Parent=Peve_00000002</code></pre>
</section>
<section id="generating-a-transcriptome-fasta" class="level3">
<h3 class="anchored" data-anchor-id="generating-a-transcriptome-fasta">Generating a transcriptome FASTA</h3>
<p>The basic approach to generating this transcriptome makes use of the fact that each CDS sequence in our bed file is assigned a “parent” mRNA, denoted by a parent Id in the last column (e.g., “Parent=Peve_00000001”). Each sequence with the same parent ID should be used to a) retrieve a FASTA for that sequence, and b) concatenate all of the FASTAs with the same parent ID into a single, labelled gene FASTA. The below code will iterate through our entire bed file and do this for each parent ID and its associated sequences.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load bash variables into memory</span></span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .bashvars</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Navigate to correct directory and make output file</span></span>
<span id="cb6-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_dir}</span></span>
<span id="cb6-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_fasta_name}</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Helper list for processing all parent IDs</span></span>
<span id="cb6-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">processed_ids</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">######################################################</span></span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Helper function to concatenate and format several bedtools output sequences </span></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># into a single, appropriately named contig</span></span>
<span id="cb6-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">concatenate_helper()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-16">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input_bedtools_fastas</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parent_ID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$2</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">reference_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb6-19">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">positions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb6-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">concatenated_sequences</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb6-21"></span>
<span id="cb6-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the input line by line</span></span>
<span id="cb6-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">line</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb6-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if the line starts with "&gt;"</span></span>
<span id="cb6-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$line</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb6-26">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract reference name and position from the line</span></span>
<span id="cb6-27">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">reference_position</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${line</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove "&gt;"</span></span>
<span id="cb6-28">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">reference_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$reference_position</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d:</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f1</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-29">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">position</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$reference_position</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d:</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f2</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-30"></span>
<span id="cb6-31">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append position to the positions variable</span></span>
<span id="cb6-32">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">positions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$position</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">,"</span></span>
<span id="cb6-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb6-34">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate sequences</span></span>
<span id="cb6-35">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">concatenated_sequences</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$line</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb6-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$input_bedtools_fastas</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-38"></span>
<span id="cb6-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove trailing comma from positions</span></span>
<span id="cb6-40">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">positions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${positions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>,<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-41"></span>
<span id="cb6-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output the reformatted result</span></span>
<span id="cb6-43">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parent_ID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$reference_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$positions</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-44">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$concatenated_sequences</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-45"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-46"></span>
<span id="cb6-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">######################################################</span></span>
<span id="cb6-48"></span>
<span id="cb6-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process your input bed file</span></span>
<span id="cb6-50"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">line</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb6-51"></span>
<span id="cb6-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pull the parent ID number for the current line of the bed</span></span>
<span id="cb6-53">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parentID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$line</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Parent=Peve_[0-9]\+'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-54">    </span>
<span id="cb6-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only continue if you haven't already processed the CDS sequences associated with this parent ID</span></span>
<span id="cb6-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${processed_ids</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parentID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb6-57"> </span>
<span id="cb6-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the current parentID to the processed list</span></span>
<span id="cb6-59">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">processed_ids</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parentID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-60"></span>
<span id="cb6-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create temporary files to store intermediate results</span></span>
<span id="cb6-62">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">temp_CDS_bed_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mktemp</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-63">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">temp_bedtools_fasta_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mktemp</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-64"></span>
<span id="cb6-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Grab all of the CDS sequences with the same parent ID and write to temporary file</span></span>
<span id="cb6-66">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parentID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_bed}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_CDS_bed_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-67"></span>
<span id="cb6-68">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use bedtools to extract corresponding FASTAs and write to temporary file</span></span>
<span id="cb6-69">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${programs_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>bedtools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span> getfasta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fi</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${genome_fasta}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-bed</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_CDS_bed_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_bedtools_fasta_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-70"></span>
<span id="cb6-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use our helper function to concatenate and format all of these CDS fastas into a single contig</span></span>
<span id="cb6-72">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">concatenated_fasta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">concatenate_helper</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_bedtools_fasta_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parentID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-73"> </span>
<span id="cb6-74">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the concatenated CDS fasta to our output file on a new line</span></span>
<span id="cb6-75">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$concatenated_fasta</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_fasta}</span></span>
<span id="cb6-76"></span>
<span id="cb6-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the temporary files</span></span>
<span id="cb6-78">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_CDS_bed_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$temp_bedtools_fasta_file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb6-80"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_bed}</span></span>
<span id="cb6-81"></span>
<span id="cb6-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The output file ends up having a blank first line before the data, so delete that unwanted empty first line</span></span>
<span id="cb6-83"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1{/^$/d}'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${transcriptome_fasta}</span></span></code></pre></div>
</div>
<p>Now we have a transcriptome FASTA the can be used for kallisto abundance quantification!</p>


</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_02_07_Peve_transcriptome.html</guid>
  <pubDate>Wed, 07 Feb 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>RNAseq abundance quantification (A.Pulchra, P.evermanni, P.meandrina)</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_02_06_RNAseq_kallisto.html</link>
  <description><![CDATA[ 




<p>I’m currently working on trying a few types of gene expression analysis with the E5 RNAseq and sRNAseq data we have for <em>A. Pulchra</em>, <em>P. evermanni</em>, and <em>P. meandrina,</em> but before I can do any analysis work we need abundance count matrices for the RNAseq data from each of the three species. This notebook post is a write up of the steps involved in quantifying transcript abundances using kallisto. I’ll only be going step-by-step through the code used for <em>P. meandrina</em>, but the workflow is the same for all three species, and the rendered code for all three species is linked below.<br>
</p>
<p><u>Rendered code (.md files):</u><br>
- <a href="https://github.com/urol-e5/deep-dive/blob/main/D-Apul/code/14-Apul-RNAseq-kallisto.md">A. pulchra</a><br>
- <a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/12-Peve-RNAseq-kallisto.md">P. evermanni</a><br>
- <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md">P. meandrina</a></p>
<p><u>Required Inputs:</u><br>
- Trimmed RNAseq reads (e.g.&nbsp;<code>.fastq.gz</code>)<br>
- Transcriptome fasta (e.g.&nbsp;<code>*.fasta</code>, <code>*.fna</code>, <code>*.fa</code>)</p>
<p><u>Output:</u><br>
- Counts matrix representing the abundance of sequenced transcripts</p>
<p><u>Tools/software:</u><br>
- kallisto v.0.50.1<br>
- TrinityRNASeq v.2.12.0<br>
</p>
<section id="kallisto-workflow" class="level2">
<h2 class="anchored" data-anchor-id="kallisto-workflow">Kallisto Workflow</h2>
<section id="download-trimmed-reads-and-transcriptome" class="level3">
<h3 class="anchored" data-anchor-id="download-trimmed-reads-and-transcriptome">Download <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#download-trimmed-rnaseq-reads">trimmed reads</a> and <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#retrieve-the-reference-transcriptome">transcriptome</a></h3>
<p>If you don’t already have them in an accessible directory, download the trimmed RNAseq reads and transcriptome file you’ll be using</p>
</section>
<section id="build-kallisto-index" class="level3">
<h3 class="anchored" data-anchor-id="build-kallisto-index">Build <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#building-index">kallisto index</a></h3>
<p>The first step is to build a kallisto index. In this step, kallisto takes your reference transcriptome as input and breaks each transcript into “k-mers,” or shorter sequences that are k nucleotides long. It then “indexes” these k-mers, storing each k-mer and its transcript association in a data structure for more efficient retrieval during the pseudoalignment step.</p>
</section>
<section id="sample-quantification" class="level3">
<h3 class="anchored" data-anchor-id="sample-quantification">Sample <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#sample-quantification">quantification</a></h3>
<p>Next is quantification, which take both the index you just constructed and your trimmed RNAseq read, and makes use of pseudoalignment, a process that is much faster and more efficient than aligning each full read to a full transcript. Briefly, each read is broken up into k-mers, which are then mapped to the index to see which indexed transcript k-mers may match the read k-mers. Kallisto then calculates a probability score for each read/transcript pair, evaluating the likelihood that a given read originated from each transcript. These scores are then used to estimate transcript abundance.</p>
</section>
<section id="build-count-matrix-for-all-samples" class="level3">
<h3 class="anchored" data-anchor-id="build-count-matrix-for-all-samples">Build <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/14-Pmea-RNAseq-kallisto.md#trinity-matrix-with-kallisto-output">count matrix</a> for all samples</h3>
<p>The kallisto quantification process can only take one sample (i.e., one pair of reads) at a time, so as a last step we build a counts matrix that lists the transcript abundances for all of our samples in a single file.</p>
</section>
<section id="summary" class="level3">
<h3 class="anchored" data-anchor-id="summary">Summary</h3>
<p><u>A. pulchra:</u><br>
sample 140 – 47M reads processed (61.4% mapped)<br>
sample 145 – 42M reads processed (65.3% mapped)<br>
sample 150 – 43M reads processed (47.0% mapped)<br>
sample 173 – 47M reads processed (60.7% mapped)<br>
sample 178 – 42M reads processed (59.3% mapped)<br>
</p>
<p><u>P. evermanni:</u><br>
sample 71 – 50M reads processed (35.3% mapped)<br>
sample 73 – 51M reads processed (29.8% mapped)<br>
sample 76 – 49M reads processed (35.6% mapped)<br>
sample 79 – 49M reads processed (31.9% mapped)<br>
sample 82 – 48M reads processed (37.3% mapped)</p>
<p><u>P. meandrina:</u><br>
sample 47 – 54M reads processed (26.1% mapped)<br>
sample 48 – 51M reads processed (25.3% mapped)<br>
sample 50 – 55M reads processed (31.1% mapped)<br>
sample 53 – 53M reads processed (31.8% mapped)<br>
sample 57 – 42M reads processed (21.7% mapped)</p>


</section>
</section>

 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_02_06_RNAseq_kallisto.html</guid>
  <pubDate>Tue, 06 Feb 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>P.evermanni RNAseq kallisto debugging</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_01_31_Peve_kallisto.html</link>
  <description><![CDATA[ 




<p>I’m currently trying to quantify RNA abundances using RNAseq data from the three E5 deep dive species, and I’m running into some issues for <em>P. evermanni</em>.</p>
<p>Links:</p>
<ul>
<li><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/12-Peve-RNAseq-kallisto.Rmd">code (.Rmd)</a></li>
<li><a href="https://github.com/urol-e5/deep-dive/blob/main/E-Peve/code/12-Peve-RNAseq-kallisto.md">knitted file (.md)</a></li>
<li><a href="https://github.com/RobertsLab/resources/issues/1793">github issue</a></li>
</ul>
<p>There’s no published transcriptome fasta for <em>P. evermanni</em>, so instead I’m using a published CDS gff file and associated scaffold genome fasta to assemble a de novo reference transcriptome fasta.</p>
<p>I first used bedtools getfasta to extract fasta sequences for everything listed in the original CDS gff file, but ended up with duplicate sequences, which interferes with kallisto indexing. While trying (and failing) to remove duplicates with the fastx_toolkit fastx_collapser, Steven pointed out that the gff file (image below) I’m using contains sequences labeled as both CDS and mRNA sequences, and suggested I use only those labeled as mRNA.</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot (228).png" class="img-fluid"></p>
<p>I selected only sequecnes labelled as “mRNA” in the gff, extracted those sequences fastas from the scaffold reference, and was able to successfully build a kallisto index, however I was given a warning that kallisto index had identified 10,722,052 non-ACGUT characters in the 40,389 input sequences (or ~265 non-ACGUT characters per sequence!). Quickly looking through some of the extracted sequence fastas, I found some of them contain long internal stretches of N characters.</p>
<p><img src="https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/images/Screenshot (229).png" class="img-fluid"></p>
<p>Sam was able to inform me that this is due to the reference fasta I’m using to extract mRNA fastas. The reference is a scaffold, which characteristically contains arbitrary stretches of Ns connecting known sequences to others in the same region. Steven then also noticed that the gff file seems to be improperly labeled, with mRNA sequences that actually contain several CDS regions <em>and introns</em>, which could interfere with pseudoalignment. Instead, of using the labelled mRNAs, I may need to extract all the sequences labelled as CDS from the gff, obtain sequences fastas, group and concatenate by “Parent” (source mRNA) to exclude all of the introns, and then use those concatenated CDS fasta sequences as a reference for kallisto.</p>
<p>Some pseudo code for doing this:</p>
<p>start with original.gff, which contains CDS, mRNA, UTR, etc. sequences</p>
<p><code>grep -w "CDS" original.gff &gt; filtered.gff</code></p>
<p>now I have a filtered gff that only contains info for CDS sequences in a format that looks like:</p>
<p>blahblahblahblahblahblahblah Parent=Peve_00000001<br>
blahblahblahblahblahblahblah Parent=Peve_00000001<br>
blahblahblahblahblahblahblah Parent=Peve_00000001<br>
blahblahblahblahblahblahblah Parent=Peve_00000002<br>
blahblahblahblahblahblahblah Parent=Peve_00000002<br>
…</p>
<p>where each Parent ID (“Parent=Peve_00000001”) groups together CDS sequences that originate from the same mRNA. To get full concatenated fasta sequences for each mRNA I’ll do:</p>
<pre><code>for i in #LinesInFiltered.gff:

  get parentID of filtered.gff line i

  if parentID not already in final.fasta:

    extract all lines in filtered.gff with parentID
    bedtools to get each lines' fasta sequence
    concatenate all of these fastas
    assign appropriate ID that includes parentID to concatenated fasta
    add this parentID.fasta to final.fasta</code></pre>
<p>this final.fasta should contain the same number of sequence fastas as unique parentIDs in filtered.gff</p>



 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2024_01_31_Peve_kallisto.html</guid>
  <pubDate>Wed, 31 Jan 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>P.meandrina sRNA: miRdeep2 and 3 species sRNA comparison</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_12_05_E5_coral.html</link>
  <description><![CDATA[ 




<p>The <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/11-Pmea-sRNAseq-miRdeep2.md"><em>P.meandrina</em> miRdeep2</a> finished running!</p>
<p>A quick comparison of the different miRNA ID approaches for the three species we’ve been looking at:</p>
<table class="table">
<colgroup>
<col style="width: 17%">
<col style="width: 21%">
<col style="width: 12%">
<col style="width: 12%">
<col style="width: 17%">
<col style="width: 16%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>miRTrace</th>
<th>MirMachine</th>
<th>BLASTn<br>
(E-val=10)</th>
<th>miRdeep2</th>
<th>ShortStack</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><em>A. pulchra<br>
</em>(<em>A.millepora</em> for genome-based)</td>
<td>lophotrochozoa, rodents, primates,</td>
<td><p>Predicted loci: <strong>109</strong></p>
<p>Unique families: <strong>11</strong></p></td>
<td><p>miRBase: <strong>19,120,159</strong></p>
<p>MirGene: <strong>19,037,617</strong></p></td>
<td><p>Predicted miRNAs: <strong>4,553</strong></p>
<p>Matches to known miRNAs: <strong>4,137</strong></p>
<p>Novel miRNAs: <strong>416</strong></p></td>
<td><p>Potential loci: <strong>18,772</strong></p>
<p>miRBase matches: <strong>46</strong></p>
<p># characterized as miRNA: <strong>0</strong></p></td>
</tr>
<tr class="even">
<td><em>P. evermanni</em></td>
<td>insects</td>
<td><p>Predicted loci: <strong>83</strong></p>
<p>Unique familes: <strong>15</strong></p></td>
<td><p>miRBase: <strong>8,824,359</strong></p>
<p>MirGene: <strong>8,783,659</strong></p></td>
<td><p>Predicted miRNAs: <strong>5,812</strong></p>
<p>Matches to known miRNAS: <strong>5,096</strong></p>
<p>Novel miRNAs: <strong>716</strong></p></td>
<td><p>Potential loci: <strong>15,040</strong></p>
<p>miRBase matches: <strong>25</strong></p>
<p># characterized as miRNA: <strong>0</strong></p></td>
</tr>
<tr class="odd">
<td><em>P. meandrina</em></td>
<td>nematode, insects, lophotrochozoa, primates</td>
<td><p>Predicted loci: <strong>40</strong></p>
<p>Unique families: <strong>7</strong></p></td>
<td><p>miRBase: <strong>13,708,946</strong></p>
<p>MirGene: <strong>13,614,786</strong></p></td>
<td><p>Predicted miRNAs: <strong>2,429</strong></p>
<p>Matches to known miRNAs: <strong>2,143</strong></p>
<p>Novel miRNAs: <strong>286</strong></p></td>
<td><p>Potential loci: <strong>7,306</strong></p>
<p>miRBase matches: <strong>86</strong></p>
<p># characterized as miRNA: <strong>0</strong></p></td>
</tr>
</tbody>
</table>



 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_12_05_E5_coral.html</guid>
  <pubDate>Tue, 05 Dec 2023 08:00:00 GMT</pubDate>
</item>
<item>
  <title>P.meandrina sRNA: MirMachine, ShortStack</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_11_30_E5_coral.html</link>
  <description><![CDATA[ 




<p>More on P.meandrina sRNA investigation</p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/12-Pmea-sRNAseq-MirMachine.html"><em>P.meandrina</em> MirMachine</a></p>
<p><a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/13-Pmea-sRNAseq-ShortStack.md"><em>P.meandrina</em> ShortStack</a></p>
<p><em>P.meandrina</em> miRdeep2 (incomplete)</p>



 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_11_30_E5_coral.html</guid>
  <pubDate>Thu, 30 Nov 2023 08:00:00 GMT</pubDate>
</item>
<item>
  <title>P.meandrina sRNA: trimming, miRTrace, BLASTn</title>
  <dc:creator>Kathleen Durkin</dc:creator>
  <link>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_11_14_E5_coral.html</link>
  <description><![CDATA[ 




<p>Modified Sam’s code for <em>P.meandrina</em> sRNA <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/08-Pmea-sRNAseq-trimming.md">trimming</a>, <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/09-Pmea-sRNAseq-miRTrace.md">miRTrace</a>, and <a href="https://github.com/urol-e5/deep-dive/blob/main/F-Pmea/code/10-Pmea-sRNAseq-BLASTn.md">BLASTn</a>.</p>



 ]]></description>
  <category>E5-coral</category>
  <guid>https://shedurkin.github.io/Roberts-LabNotebook/posts/projects/E5_coral/2023_11_14_E5_coral.html</guid>
  <pubDate>Tue, 14 Nov 2023 08:00:00 GMT</pubDate>
</item>
</channel>
</rss>
